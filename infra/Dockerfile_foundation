FROM ubuntu:20.04
ARG DEBIAN_FRONTEND=noninteractive

WORKDIR /tmp

RUN apt-get update \
  && apt-get install \
       build-essential software-properties-common apt-transport-https lsb-release ca-certificates \
       libreadline-dev zlib1g-dev libssl-dev libpcre3 libpcre3-dev \
       libhiredis-dev libsqlite3-dev libjemalloc-dev gettext-base \
       gpg gnupg2 make wget curl lsof unzip jq tcc bc \
       x11vnc xvfb \
       docker.io docker-compose \
       openjdk-11-jdk openjfx leiningen \
       python3 python3-pip r-base -y \
 && curl -s https://deb.nodesource.com/setup_16.x | sh \
 && apt-get update && apt-get install nodejs -y
 
# Redis@6.2.1
RUN wget http://download.redis.io/releases/redis-6.2.1.tar.gz \
  && tar -xf redis-6.2.1.tar.gz && cd redis-6.2.1 && make && make install

# Minio
RUN wget https://dl.min.io/server/minio/release/linux-amd64/archive/minio_20221029062133.0.0_amd64.deb -O minio.deb \
 && dpkg -i minio.deb

# Java
ENV JAVA_HOME=/usr/lib/jvm/default-java

# Vnc                  
RUN mkdir /root/.vnc                                                                                                                           
RUN x11vnc -storepasswd 1234 /root/.vnc/passwd

#
# Nodejs
#

ENV NODE_PATH=/usr/lib/node_modules
RUN npm -g install ganache http-server pnpm yarn \
  && npm -g install \
    @react-native-async-storage/async-storage \
    blessed@0.1.81 \
    blessed-contrib@4.10.1 \
    bresenham@0.0.4 \
    chalk@4.1.2 \
    crypto-js \
    dateformat@5.0.2 \
    drawille \
    eventsource@1.1.0 \
    fastify \
    gl-matrix \
    javascript-time-ago@2.3.10 \
    node-fetch@2.6.6 \
    node-localstorage@2.2.1 \
    pg \
    react-blessed-contrib \
    react-blessed@0.7.2 \
    react@17.0.2 \
    redis \
    sql.js \
    tiny-worker \
    valtio \
    uuid@8.3.2 \
    window \
    ws \
  && npm -g install bip32 bip39 bip84 bitcoinjs-lib@5.2.0 bitcoinjs-message@2.2.0 ecpair safe-buffer tiny-secp256k1 wif \
  && npm -g install ethers solc

#
# Quickjs
#

RUN wget https://bellard.org/quickjs/binary_releases/quickjs-linux-x86_64-2021-03-27.zip \
  && unzip quickjs-linux-x86_64-2021-03-27.zip \
  && mv qjs /usr/local/bin
  
#
# R
#

RUN R -e "install.packages('jsonlite',dependencies=TRUE, repos='http://cran.rstudio.com/')"
RUN ln -s /usr/bin/R /usr/bin/r

#
# PYTHON
#

RUN ln -s /usr/bin/python3 /usr/bin/python
RUN pip3 install websocket

#
# Openresty/Nginx
#
ENV OPENRESTY_VERSION=1.21.4.1
ENV LUAROCKS_VERSION=3.9.1
ENV NCHAN_VERSION=1.3.5                                                                                                                                

RUN wget https://openresty.org/download/openresty-${OPENRESTY_VERSION}.tar.gz && tar -xf openresty-${OPENRESTY_VERSION}.tar.gz \
  && wget https://github.com/slact/nchan/archive/refs/tags/v${NCHAN_VERSION}.tar.gz && tar -xf v${NCHAN_VERSION}.tar.gz \
  && wget https://luarocks.github.io/luarocks/releases/luarocks-${LUAROCKS_VERSION}.tar.gz && tar -xf luarocks-${LUAROCKS_VERSION}.tar.gz
RUN cd openresty-${OPENRESTY_VERSION} && ./configure --add-module=../nchan-${NCHAN_VERSION} --with-pcre-jit \
        --with-ipv6 --prefix=/opt/openresty \
        && make && make install
RUN cd luarocks-${LUAROCKS_VERSION} && ./configure --prefix=/opt/openresty/luajit --with-lua=/opt/openresty/luajit \
        --lua-suffix=jit --with-lua-include=/opt/openresty/luajit/include/luajit-2.1 \
        && make && make install
        
ENV PATH=/opt/openresty/bin:/opt/openresty/luajit/bin:/opt/openresty/nginx/sbin:$PATH

RUN /opt/openresty/luajit/bin/luarocks install luasocket \
  && /opt/openresty/luajit/bin/luarocks install lustache \
  && /opt/openresty/luajit/bin/luarocks install lua-cjson \
  && /opt/openresty/luajit/bin/luarocks install lua-crypt \
  && /opt/openresty/luajit/bin/luarocks install lua-resty-openssl \
  && /opt/openresty/luajit/bin/luarocks install lua-resty-http \
  && /opt/openresty/luajit/bin/luarocks install lua-resty-uuid \
  && /opt/openresty/luajit/bin/luarocks install lua-resty-mail \
  && /opt/openresty/luajit/bin/luarocks install lsqlite3 \
  && /opt/openresty/luajit/bin/luarocks install multipart \
  && /opt/openresty/luajit/bin/luarocks install pgmoon


#
# Clojure
#
ADD ./infra/project.clj project.clj
RUN lein deps && rm project.clj

ADD ./infra/entrypoint.sh /usr/bin/entrypoint.sh
RUN chmod +x /usr/bin/entrypoint.sh
